name: Build & Push to ECR (per branch tag)

on:
  push:
    branches: [ main, rafa, ele, fran ]
    paths:
      - 'Dockerfile'
      - 'app/**'
      - 'requirements.txt'
      - 'pyproject.toml'
      - 'poetry.lock'
      - '!infra/**'   # cambios solo de infra NO disparan build
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  ROLE_ARN: ${{ secrets.AWS_ROLE_TO_ASSUME }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Pick tag from branch
        id: tag
        shell: bash
        run: |
          case "${GITHUB_REF_NAME}" in
            main) TAG="main" ;;
            rafa) TAG="rg" ;;
            ele)  TAG="er" ;;
            fran) TAG="ff" ;;
            *) echo "Branch ${GITHUB_REF_NAME} no mapeada, saliendo"; echo "skip=true" >> $GITHUB_OUTPUT; exit 0 ;;
          esac
          TS=$(date +%Y%m%d-%H%M%S)
          echo "tag=$TAG"       >> $GITHUB_OUTPUT
          echo "ts=$TS"         >> $GITHUB_OUTPUT
          echo "repo=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}" >> $GITHUB_OUTPUT

      - name: Build & Push
        if: steps.tag.outputs.tag != ''
        run: |
          REPO="${{ steps.tag.outputs.repo }}"
          TAG="${{ steps.tag.outputs.tag }}"
          TS="${{ steps.tag.outputs.ts }}"

          docker build -t "$REPO:$TAG" -t "$REPO:${TAG}-${TS}" .
          docker push "$REPO:$TAG"
          docker push "$REPO:${TAG}-${TS}"